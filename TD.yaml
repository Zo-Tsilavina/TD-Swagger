openapi: 3.0.0
info:
  title: Students and teachers API
  version: 1.0.0
servers:
  - url: http://STD22083.com
paths:
  /students:
    get:
      summary: Get student information
      responses:
        '200':
          description: Successful response, OK
          content:
            application/json:
              example:
                id: STD22083
                name: Zo Tsilavina
                age: 18
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: An error occurred
    post:
      summary: Add Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Zo Tsilavina
                age:
                  type: integer
                  example: 18
      responses:
        '200':
          description: Successful response, OK
          content:
            application/json:
              example:
                message: Student added successfully
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: An error occurred
  /pets/{petId}:
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          description: Pet id to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existing pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: Delete a pet by id
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: API Key
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
